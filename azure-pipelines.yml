trigger:
  - main

variables:
  buildConfiguration: 'Release'
  releaseBranchName: 'release'

  vmImageName: 'ubuntu-latest'

stages:
  - stage: 'Build'
    displayName: 'Build the web application'
    jobs:
      - job: 'Build'
        displayName: 'Build job'
        pool:
          vmImage: $(vmImageName)
          demands:
            - npm
        variables:
          wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
          dotnetSdkVersion: '6.x'
      
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET SDK $(dotnetSdkVersion)'
            inputs:
              version: '$(dotnetSdkVersion)'
          
          - script: | 
              echo rootDir: $(wwwrootDir)
              echo Build.DefinitionName: $(Build.DefinitonName)
            
          - task: Npm@1
            displayName: 'Run npm install'
            inputs:
              verbose: false
          
          - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
            displayName: 'Compile Sass assests'

          - task: gulp@1
            displayName: 'Run gulp task'

          - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
            displayName: 'Write build info'
            workingDirectory: $$(wwwrootDir)
          
          - task: DotNetCoreCLI@2
            displayName: 'Build the project - $(buildConfiguration)'
            inputs:
              command: build
              arguments: '--no-restore --configuration $(buildConfiguration)'
              projects: '**/*.csproj'
          
          - task: DotNetCoreCLI@2
            displayName: 'Publish the project - $(buildConfiguration)'
            inputs:
              command: publish
              projects: '**/*.csproj'
              publishWebProjects: false
              arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
              zipAfterPublish: true

          - publish: $(Build.ArtifactStagingDirectory)/$(buildConfiguration)
            artifact: drop